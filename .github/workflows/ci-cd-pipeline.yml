# name: CI/CD Pipeline

# # Trigger the pipeline on push to the 'main' branch
# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     steps:
#       # Checkout the code from your repository
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Set up Docker Buildx (to build multi-platform images)
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       # Log in to Docker Hub (hardcode username and password)
#       - name: Log in to Docker Hub
#         run: |
#           echo "Toothpaste" | docker login -u "antaratalapatra" --password-stdin

#       # Build and push the Docker image to Docker Hub with the 'latest' tag
#       - name: Build and push Docker image
#         run: |
#           docker build -t antaratalapatra/react-vite-app:latest .
#           docker push antaratalapatra/react-vite-app:latest

name: CI/CD Pipeline for React Vite App

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull request to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # The virtual machine that runs the pipeline

    steps:
      # Checkout the repository to get the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx (used for building multi-platform Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using GitHub Secrets for Docker credentials
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username (stored as GitHub secrets)
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password (stored as GitHub secrets)

      # Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .  # The context directory is the current directory
          push: true   # Push the image to Docker Hub after build
          tags: antaratalapatra/my-vite-app:latest  # Replace with your Docker Hub username

      # Notify Jenkins about the new Docker image (you can use a webhook or similar approach)
      - name: Trigger Jenkins Deployment
        run: |
          curl -X POST http://your-jenkins-server/job/your-job-name/buildWithParameters?token=your-jenkins-api-token&image_tag=latest
